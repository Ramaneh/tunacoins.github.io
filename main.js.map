{"version":3,"sources":["./src/app/app.component.html","./src/app/components/block-view/block-view.component.html","./src/app/components/transactions-table/transactions-table.component.html","./src/app/pages/blockchain-viewer/blockchain-viewer.component.html","./src/app/pages/create-transaction/create-transaction.component.html","./src/app/pages/pending-transactions/pending-transactions.component.html","./src/app/pages/settings/settings.component.html","./src/app/pages/wallet-balance/wallet-balance.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/block-view/block-view.component.scss","./src/app/components/block-view/block-view.component.ts","./src/app/components/transactions-table/transactions-table.component.scss","./src/app/components/transactions-table/transactions-table.component.ts","./src/app/pages/blockchain-viewer/blockchain-viewer.component.scss","./src/app/pages/blockchain-viewer/blockchain-viewer.component.ts","./src/app/pages/create-transaction/create-transaction.component.scss","./src/app/pages/create-transaction/create-transaction.component.ts","./src/app/pages/pending-transactions/pending-transactions.component.scss","./src/app/pages/pending-transactions/pending-transactions.component.ts","./src/app/pages/settings/settings.component.scss","./src/app/pages/settings/settings.component.ts","./src/app/pages/wallet-balance/wallet-balance.component.scss","./src/app/pages/wallet-balance/wallet-balance.component.ts","./src/app/services/blockchain.service.ts","./src/environments/environment.ts","./src/main.ts","buffer (ignored)","crypto (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\r\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">\\r\\n    <img src=\\\"\\\" width=\\\"30\\\" height=\\\"30\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"\\\">\\r\\n    &nbsp;Tunacoin\\r\\n  </a>\\r\\n\\r\\n  <div>\\r\\n    <button routerLink=\\\"/new/transaction/pending\\\" class=\\\"btn btn-outline-light\\\" *ngIf=\\\"thereArePendingTransactions()\\\">\\r\\n      Pending \\r\\n      <span class=\\\"badge badge-light\\\">{{blockchain.pendingTransactions.length}}</span>\\r\\n    </button>\\r\\n    &nbsp;\\r\\n    <button routerLink=\\\"/settings\\\" class=\\\"btn btn-outline-light\\\">\\r\\n      Setting\\r\\n    </button>\\r\\n    &nbsp;\\r\\n    <button routerLink=\\\"/new/transaction\\\" class=\\\"btn btn-outline-light\\\">\\r\\n      Buat Transaksi\\r\\n    </button>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<br>\\r\\n\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n<footer class=\\\"text-muted text-center\\\" style=\\\"margin-top: 150px;\\\">\\r\\n  <small>.<br></small>\\r\\n</footer>\\r\\n\"","export default \"<div class=\\\"card\\\" [class.border-primary]=\\\"isSelectedBlock()\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <h5 class=\\\"card-title\\\">Block {{ getBlockNumber() }} <small class=\\\"text-muted\\\" *ngIf=\\\"block.previousHash == 0\\\">(Genesis block)</small></h5>\\r\\n    </div>\\r\\n\\r\\n     <ul class=\\\"list-group list-group-flush\\\">\\r\\n\\t    <li class=\\\"list-group-item\\\">\\r\\n\\t    \\t<span class=\\\"\\\">Hash</span>\\r\\n\\t    \\t<br>\\r\\n\\t    \\t<div class=\\\"text-truncate\\\" [style.color]=\\\"'#' + block.hash.substring(0,6)\\\">\\r\\n\\t    \\t\\t<small>{{ block.hash }}</small>\\r\\n\\t    \\t</div>\\r\\n\\r\\n\\t\\t\\t<br>\\r\\n\\t\\t\\t<span class=\\\"\\\">Hash dari block sebelumnya</span>\\r\\n\\t    \\t<br>\\r\\n\\r\\n\\t    \\t<div class=\\\"text-truncate\\\" [style.color]=\\\"'#' + block.previousHash.substring(0,6)\\\">\\r\\n\\t    \\t\\t<small>{{ block.previousHash }}</small>\\r\\n\\t    \\t</div>\\r\\n\\t    </li>\\r\\n\\r\\n\\t    <li class=\\\"list-group-item\\\">\\r\\n\\t    \\t<span class=\\\"\\\">Nonce</span><br>\\r\\n\\t    \\t<div class=\\\"text-truncate text-muted\\\">\\r\\n\\t    \\t\\t<small>{{ block.nonce }}</small>\\r\\n\\t    \\t</div>\\r\\n\\t    </li>\\r\\n\\r\\n\\t    <li class=\\\"list-group-item\\\">\\r\\n\\t    \\t<span class=\\\"\\\">Timestamp</span><br>\\r\\n\\t    \\t<div class=\\\"text-truncate text-muted\\\">\\r\\n\\t    \\t\\t<small>{{ block.timestamp }}</small>\\r\\n\\t    \\t</div>\\r\\n\\t    </li>\\r\\n\\r\\n\\t\\t<li class=\\\"list-group-item\\\">\\r\\n\\t    \\t<span class=\\\"\\\">dari</span><br>\\r\\n\\t    \\t<div class=\\\"text-truncate text-muted\\\">\\r\\n\\t    \\t\\t<small>{{ block.from }}</small>\\r\\n\\t    \\t</div>\\r\\n\\t    </li>\\r\\n\\t  </ul>\\r\\n\\r\\n\\t  <!-- <div class=\\\"card-body\\\"> -->\\r\\n\\t  \\t<!-- <span class=\\\"card-link\\\" *ngIf=\\\"!blockHasTx()\\\">Block has no transactions</span> -->\\r\\n\\t  \\t<!-- <span class=\\\"card-link\\\" *ngIf=\\\"blockHasTx()\\\">Contains {{block.transactions.length}} transactions</span> -->\\r\\n\\t  <!-- </div> -->\\r\\n  </div>\"","export default \"<p *ngIf=\\\"transactions.length === 0\\\">Block ini tidak ada Transaksi</p>\\r\\n\\r\\n<table class=\\\"table table-hover table-striped\\\" *ngIf=\\\"transactions.length > 0\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th scope=\\\"col\\\">#</th>\\r\\n      <th scope=\\\"col\\\">Dari</th>\\r\\n      <th scope=\\\"col\\\">Ke</th>\\r\\n      <th scope=\\\"col\\\">Jumlah</th>\\r\\n      <th scope=\\\"col\\\">Timestamp</th>\\r\\n      <th scope=\\\"col\\\">Valid?</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let tx of transactions; index as index\\\">\\r\\n      <td>{{index}}</td>\\r\\n      <td class=\\\"text-truncate\\\" style=\\\"max-width: 100px;\\\">\\r\\n\\r\\n        <a [routerLink]=\\\"['/wallet', tx.fromAddress]\\\" *ngIf=\\\"tx.fromAddress !== null\\\">{{tx.fromAddress}}</a>\\r\\n\\r\\n        <span *ngIf=\\\"tx.fromAddress === null\\\">System</span>\\r\\n\\r\\n        <span class=\\\"text-muted\\\" *ngIf=\\\"blockchainService.addressIsFromCurrentUser(tx.fromAddress)\\\">\\r\\n          <br><small>(Itu Anda!)</small>\\r\\n        </span>\\r\\n      </td>\\r\\n      <td class=\\\"text-truncate\\\" style=\\\"max-width: 100px;\\\">\\r\\n          <a [routerLink]=\\\"['/wallet', tx.toAddress]\\\">{{tx.toAddress}}</a>\\r\\n\\r\\n          <span class=\\\"text-muted\\\" *ngIf=\\\"blockchainService.addressIsFromCurrentUser(tx.toAddress)\\\">\\r\\n            <br><small>(Itu Anda!)</small>\\r\\n          </span>\\r\\n      </td>\\r\\n      <td>\\r\\n        {{tx.amount}}\\r\\n        <span *ngIf=\\\"tx.fromAddress === null\\\" class=\\\"text-muted\\\"><br><small>(Block reward)</small></span>\\r\\n      </td>\\r\\n      <td>\\r\\n        {{tx.timestamp}}<br>\\r\\n        <span class=\\\"text-muted\\\"><small>{{tx.timestamp |date:'MMM d, y, HH:mm'}}</small></span>\\r\\n      </td>\\r\\n      <td style=\\\"max-width: 40px;\\\">\\r\\n        <span *ngIf=\\\"tx.isValid()\\\">✓</span>\\r\\n        <span *ngIf=\\\"!tx.isValid()\\\">✗</span>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","export default \"<div class=\\\"container\\\">\\r\\n\\t<h1>Blocks</h1>\\r\\n\\t<p>Setiap Blocks menampilkan isi, klik untuk melihatnya</p>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\" style=\\\"overflow-x: scroll;white-space: nowrap;\\\">\\r\\n\\t<app-block-view \\r\\n\\t\\t*ngFor=\\\"let block of blocks\\\" \\r\\n\\t\\t[block]=\\\"block\\\" \\r\\n\\t\\t[selectedBlock]=\\\"selectedBlock\\\"\\r\\n\\t\\t(click)=\\\"showTransactions(block)\\\"\\r\\n\\t></app-block-view>\\r\\n</div>\\r\\n\\r\\n<br><br>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\t<h1>Transaksi dalam block {{ getBlockNumber(selectedBlock) }}</h1>\\r\\n\\r\\n\\t<app-transactions-table\\r\\n\\t\\t[transactions]=\\\"selectedBlock.transactions\\\"\\r\\n\\t></app-transactions-table>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"container\\\">\\r\\n\\t<h1>Buat Transaksi</h1>\\r\\n\\t<p></p>\\r\\n\\r\\n\\t<br>\\r\\n\\r\\n\\t<div class=\\\"form-group\\\">\\r\\n\\t    <label for=\\\"fromAddress\\\">Hash</label>\\r\\n\\t    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromAddress\\\" aria-describedby=\\\"fromAddressHelp\\\" [(ngModel)]=\\\"ownWalletKey.publicKey\\\" disabled>\\r\\n\\t    <small id=\\\"fromAddressHelp\\\" class=\\\"form-text text-muted\\\">\\r\\n\\t    \\tMasukan Hash Sebelumnya\\r\\n\\t    </small>\\r\\n  \\t</div>\\r\\n\\r\\n  \\t<div class=\\\"form-group\\\">\\r\\n\\t    <label for=\\\"toAddress\\\">Alamat Pengirim</label>\\r\\n\\t    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toAddress\\\" aria-describedby=\\\"toAddressHelp\\\" [(ngModel)]=\\\"newTx.toAddress\\\">\\r\\n\\t    <small id=\\\"toAddressHelp\\\" class=\\\"form-text text-muted\\\">\\r\\n\\t    Masukan Alamat Pengirim\\r\\n\\t    </small>\\r\\n  \\t</div>\\r\\n\\r\\n  \\t<div class=\\\"form-group\\\">\\r\\n\\t    <label for=\\\"amount\\\">Jumlah</label>\\r\\n\\t    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"amount\\\" aria-describedby=\\\"amountHelp\\\" [(ngModel)]=\\\"newTx.amount\\\">\\r\\n\\t    <small id=\\\"amountHelp\\\" class=\\\"form-text text-muted\\\">\\r\\n\\t    \\tMasukan Jumlah\\r\\n\\t    </small>\\r\\n\\r\\n\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t<label for=\\\"toAddress\\\">Dari</label>\\r\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toAddress\\\" aria-describedby=\\\"toAddressHelp\\\" [(ngModel)]=\\\"newTx.toAddress\\\">\\r\\n\\t\\t\\t<small id=\\\"toAddressHelp\\\" class=\\\"form-text text-muted\\\">\\r\\n\\t\\t\\tMasukan Asal barang\\r\\n\\t    </small>\\r\\n  \\t</div>\\r\\n\\r\\n\\t  <div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"toAddress\\\">Masukan Gambar </label>\\r\\n\\t\\t<input type=\\\"file\\\"(change)=\\\"onselecFile($event)\\\">\\r\\n  </div>\\r\\n  \\t<button (click)=\\\"createTransaction()\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sign & create transaction</button>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"container\\\">\\r\\n\\r\\n\\t<div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"justAddedTx\\\">\\r\\n\\t\\tTransaction created successfully!\\r\\n\\t</div>\\r\\n\\r\\n\\t<h1>Pending transactions</h1>\\r\\n\\t<p>These transactions are waiting to be included in the next block. Next block is created when you start the mining process.</p>\\r\\n\\r\\n\\t<app-transactions-table\\r\\n\\t\\t[transactions]=\\\"pendingTransactions\\\">\\r\\n\\t</app-transactions-table>\\r\\n\\r\\n\\t <button class=\\\"btn btn-primary\\\" *ngIf=\\\"pendingTransactions.length > 0 && miningInProgress === false\\\" (click)=\\\"minePendingTransactions()\\\">\\r\\n     \\tStart mining\\r\\n    </button>\\r\\n\\r\\n    <div *ngIf=\\\"miningInProgress === true\\\">\\r\\n    \\tMining block.. Hang on...\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"container\\\">\\r\\n  <h1>settings</h1>\\r\\n  <br>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Kesulitan</label>\\r\\n    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"blockchain.difficulty\\\">\\r\\n  </div>\\r\\n  <br>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label> Jumlah Awal</label>\\r\\n    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"blockchain.miningReward\\\">\\r\\n  </div> \\r\\n</div>\"","export default \"<div class=\\\"container\\\">\\r\\n\\t<h1>Wallet details</h1>\\r\\n\\r\\n\\t<p style=\\\"word-wrap:break-word;\\\">\\r\\n\\t\\t<strong>Address:</strong>\\r\\n\\t\\t<br>\\r\\n\\t\\t{{walletAddress}}\\r\\n\\t</p>\\r\\n\\r\\n\\t<p>\\r\\n\\t\\t<strong>Balance:</strong>\\r\\n\\t\\t<br>\\r\\n\\t\\t{{ balance }}\\r\\n\\t</p>\\r\\n\\r\\n\\t<hr>\\r\\n\\r\\n\\t<h1>Transactions</h1>\\r\\n\\t<p *ngIf=\\\"transactions.length === 0\\\">This wallet has made no transactions (yet)</p>\\r\\n\\t<app-transactions-table\\r\\n\\t\\t[transactions]=\\\"transactions\\\"\\r\\n\\t\\t*ngIf=\\\"transactions.length > 0\\\"\\r\\n\\t></app-transactions-table>\\r\\n</div>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BlockchainViewerComponent } from './pages/blockchain-viewer/blockchain-viewer.component';\r\nimport { SettingsComponent } from './pages/settings/settings.component';\r\nimport { CreateTransactionComponent } from './pages/create-transaction/create-transaction.component';\r\nimport { PendingTransactionsComponent } from './pages/pending-transactions/pending-transactions.component';\r\nimport { WalletBalanceComponent } from './pages/wallet-balance/wallet-balance.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: BlockchainViewerComponent },\r\n  {path: 'settings', component: SettingsComponent},\r\n  {path: 'new/transaction', component: CreateTransactionComponent },\r\n  {path: 'new/transaction/pending', component: PendingTransactionsComponent },\r\n  {path: 'wallet/:address', component: WalletBalanceComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { BlockchainService } from './services/blockchain.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public blockchain;\r\n  public showInfoMessage = true;\r\n\r\n  constructor(private blockchainService: BlockchainService) {\r\n    this.blockchain = blockchainService.blockchainInstance;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  thereArePendingTransactions() {\r\n    return this.blockchain.pendingTransactions.length > 0;\r\n  }\r\n\r\n  dismissInfoMessage() {\r\n    this.showInfoMessage = false;\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BlockViewComponent } from './components/block-view/block-view.component';\r\nimport { BlockchainViewerComponent } from './pages/blockchain-viewer/blockchain-viewer.component';\r\n\r\nimport { BlockchainService } from './services/blockchain.service';\r\nimport { SettingsComponent } from './pages/settings/settings.component';\r\nimport { TransactionsTableComponent } from './components/transactions-table/transactions-table.component';\r\nimport { CreateTransactionComponent } from './pages/create-transaction/create-transaction.component';\r\nimport { PendingTransactionsComponent } from './pages/pending-transactions/pending-transactions.component';\r\nimport { WalletBalanceComponent } from './pages/wallet-balance/wallet-balance.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BlockViewComponent,\r\n    BlockchainViewerComponent,\r\n    SettingsComponent,\r\n    TransactionsTableComponent,\r\n    CreateTransactionComponent,\r\n    PendingTransactionsComponent,\r\n    WalletBalanceComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    BlockchainService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \".card {\\n  width: 18rem;\\n  display: inline-block;\\n  margin: 0 10px 0 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ibG9jay12aWV3L0M6XFxVc2Vyc1xccmFtYXdcXHR1bmFjb2lucy9zcmNcXGFwcFxcY29tcG9uZW50c1xcYmxvY2stdmlld1xcYmxvY2stdmlldy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9ibG9jay12aWV3L2Jsb2NrLXZpZXcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQyxZQUFBO0VBQ0EscUJBQUE7RUFDQSxrQkFBQTtBQ0NEIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ibG9jay12aWV3L2Jsb2NrLXZpZXcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHtcclxuXHR3aWR0aDogMThyZW07IFxyXG5cdGRpc3BsYXk6aW5saW5lLWJsb2NrOyBcclxuXHRtYXJnaW46IDAgMTBweCAwIDA7XHJcbn0iLCIuY2FyZCB7XG4gIHdpZHRoOiAxOHJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDAgMTBweCAwIDA7XG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { BlockchainService } from '../../services/blockchain.service';\r\n\r\n@Component({\r\n  selector: 'app-block-view',\r\n  templateUrl: './block-view.component.html',\r\n  styleUrls: ['./block-view.component.scss']\r\n})\r\nexport class BlockViewComponent implements OnInit {\r\n  @Input()\r\n  public block;\r\n\r\n  @Input()\r\n  public selectedBlock;\r\n\r\n  private blocksInChain;\r\n\r\n  constructor(private blockchainService: BlockchainService) {\r\n    this.blocksInChain = blockchainService.blockchainInstance.chain;\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  blockHasTx() {\r\n    return this.block.transactions.length > 0;\r\n  }\r\n\r\n  isSelectedBlock() {\r\n    return this.block === this.selectedBlock;\r\n  }\r\n\r\n  getBlockNumber() {\r\n    return this.blocksInChain.indexOf(this.block) + 1;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdHJhbnNhY3Rpb25zLXRhYmxlL3RyYW5zYWN0aW9ucy10YWJsZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { BlockchainService } from '../../services/blockchain.service';\r\n\r\n@Component({\r\n  selector: 'app-transactions-table',\r\n  templateUrl: './transactions-table.component.html',\r\n  styleUrls: ['./transactions-table.component.scss']\r\n})\r\nexport class TransactionsTableComponent implements OnInit {\r\n  @Input()\r\n  public transactions = [];\r\n\r\n  constructor(public blockchainService: BlockchainService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Jsb2NrY2hhaW4tdmlld2VyL2Jsb2NrY2hhaW4tdmlld2VyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { BlockchainService } from '../../services/blockchain.service';\r\n@Component({\r\n  selector: 'app-blockchain-viewer',\r\n  templateUrl: './blockchain-viewer.component.html',\r\n  styleUrls: ['./blockchain-viewer.component.scss']\r\n})\r\nexport class BlockchainViewerComponent implements OnInit {\r\n\r\n  public blocks = [];\r\n  public selectedBlock = null;\r\n\r\n  constructor(private blockchainService: BlockchainService) {\r\n    this.blocks = blockchainService.blockchainInstance.chain;\r\n    this.selectedBlock = this.blocks[0];\r\n    console.log(this.blocks);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  showTransactions(block) {\r\n    console.log(block);\r\n    this.selectedBlock = block;\r\n    return false;\r\n  }\r\n\r\n  blockHasTx(block) {\r\n    return block.transactions.length > 0;\r\n  }\r\n\r\n  selectedBlockHasTx() {\r\n    return this.blockHasTx(this.selectedBlock);\r\n  }\r\n\r\n  isSelectedBlock(block) {\r\n    return this.selectedBlock === block;\r\n  }\r\n\r\n  getBlockNumber(block) {\r\n    return this.blocks.indexOf(block) + 1;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NyZWF0ZS10cmFuc2FjdGlvbi9jcmVhdGUtdHJhbnNhY3Rpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { BlockchainService, IWalletKey } from '../../services/blockchain.service';\r\nimport { Transaction } from 'SavjeeCoin/src/blockchain';\r\n\r\n@Component({\r\n  selector: 'app-create-transaction',\r\n  templateUrl: './create-transaction.component.html',\r\n  styleUrls: ['./create-transaction.component.scss']\r\n})\r\nexport class CreateTransactionComponent implements OnInit {\r\n  public newTx = new Transaction();\r\n  public ownWalletKey: IWalletKey;\r\n  selectedFile = null;\r\n\r\n  constructor(private blockchainService: BlockchainService, private router: Router) {\r\n    this.newTx = new Transaction();\r\n    this.ownWalletKey = blockchainService.walletKeys[0];\r\n  }\r\n\r\n  \r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  url=\"\";\r\n  \r\n  onselectFile(e){\r\n    if(e.target.files){\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      reader.onload=(event:any)=>{\r\n        this.url=event.target.result;\r\n      }\r\n    }\r\n  }\r\n\r\n  createTransaction() {\r\n    const newTx = this.newTx;\r\n\r\n    // Set the FROM address and sign the transaction\r\n    newTx.fromAddress = this.ownWalletKey.publicKey;\r\n    newTx.signTransaction(this.ownWalletKey.keyObj);\r\n\r\n    try {\r\n      this.blockchainService.addTransaction(this.newTx);\r\n    } catch (e) {\r\n      alert(e);\r\n      return;\r\n    }\r\n\r\n    this.router.navigate(['/new/transaction/pending', { addedTx: true }]);\r\n    this.newTx = new Transaction();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BlbmRpbmctdHJhbnNhY3Rpb25zL3BlbmRpbmctdHJhbnNhY3Rpb25zLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BlockchainService } from '../../services/blockchain.service';\r\n\r\n@Component({\r\n  selector: 'app-pending-transactions',\r\n  templateUrl: './pending-transactions.component.html',\r\n  styleUrls: ['./pending-transactions.component.scss']\r\n})\r\nexport class PendingTransactionsComponent implements OnInit {\r\n  public pendingTransactions = [];\r\n  public miningInProgress = false;\r\n  public justAddedTx = false;\r\n\r\n  constructor(private blockchainService: BlockchainService, private router: Router, private route: ActivatedRoute) {\r\n    this.pendingTransactions = blockchainService.getPendingTransactions();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.route.snapshot.paramMap.get('addedTx')) {\r\n      this.justAddedTx = true;\r\n\r\n      setTimeout(() => {\r\n        this.justAddedTx = false;\r\n      }, 4000);\r\n    }\r\n  }\r\n\r\n  minePendingTransactions() {\r\n    this.miningInProgress = true;\r\n    this.blockchainService.minePendingTransactions();\r\n    this.miningInProgress = false;\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL3NldHRpbmdzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { BlockchainService } from '../../services/blockchain.service';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  public blockchain;\r\n\r\n  constructor(private blockchainService: BlockchainService) {\r\n    this.blockchain = blockchainService.blockchainInstance;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3dhbGxldC1iYWxhbmNlL3dhbGxldC1iYWxhbmNlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BlockchainService } from '../../services/blockchain.service';\r\n\r\n@Component({\r\n  selector: 'app-wallet-balance',\r\n  templateUrl: './wallet-balance.component.html',\r\n  styleUrls: ['./wallet-balance.component.scss']\r\n})\r\nexport class WalletBalanceComponent implements OnInit {\r\n  public walletAddress = '';\r\n  public balance = 0;\r\n  public transactions = [];\r\n\r\n  constructor(private route: ActivatedRoute, private blockchainService: BlockchainService) {}\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe( (params) => {\r\n        this.walletAddress = params['address'];\r\n\r\n        const blockchain = this.blockchainService.blockchainInstance;\r\n        this.balance = blockchain.getBalanceOfAddress(this.walletAddress);\r\n        this.transactions = blockchain.getAllTransactionsForWallet(this.walletAddress);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Blockchain } from 'SavjeeCoin/src/blockchain';\r\nimport EC from 'elliptic';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlockchainService {\r\n  public blockchainInstance = new Blockchain();\r\n  public walletKeys: Array<IWalletKey> = [];\r\n\r\n  constructor() {\r\n    this.blockchainInstance.difficulty = 1;\r\n    this.blockchainInstance.minePendingTransactions('hi');\r\n    this.generateWalletKeys();\r\n  }\r\n\r\n  minePendingTransactions() {\r\n    this.blockchainInstance.minePendingTransactions(\r\n      this.walletKeys[0].publicKey\r\n    );\r\n  }\r\n\r\n  addressIsFromCurrentUser(address) {\r\n    return address === this.walletKeys[0].publicKey;\r\n  }\r\n\r\n  generateWalletKeys() {\r\n    const ec = new EC.ec('secp256k1');\r\n    const key = ec.genKeyPair();\r\n\r\n    this.walletKeys.push({\r\n      keyObj: key,\r\n      publicKey: key.getPublic('hex'),\r\n      privateKey: key.getPrivate('hex'),\r\n    });\r\n\r\n    console.log(this.walletKeys);\r\n  }\r\n\r\n  getPendingTransactions() {\r\n    return this.blockchainInstance.pendingTransactions;\r\n  }\r\n\r\n  addTransaction(tx) {\r\n    this.blockchainInstance.addTransaction(tx);\r\n  }\r\n}\r\n\r\nexport interface IWalletKey {\r\n  keyObj: any;\r\n  publicKey: string;\r\n  privateKey: string;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}